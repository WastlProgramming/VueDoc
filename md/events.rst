Events in Vue ğŸš€
==============================

In diesem Beispiel lernst du, wie du in Vue verschiedene Events verwendest, um auf Benutzerinteraktionen zu reagieren. Dies ermÃ¶glicht es, dynamisch auf Aktionen wie Klicks, Tastatureingaben oder Mausbewegungen zu antworten.

.. code-block:: vue

    <script setup>
    import { ref } from 'vue'

    const count = ref(0)

    function increment() {
        count.value++
    }
    </script>

    <template>
    <button @click="increment">Count is: {{ count }}</button>
    </template>


Event-Referenz
--------------

Nachfolgend findest du eine Tabelle mit einer Ãœbersicht der gÃ¤ngigsten Vue-Events und deren Einsatzbeispiele:

.. list-table::
   :header-rows: 1

   * - Event
     - Beschreibung
     - Beispiel
   * - `@click`
     - Wird ausgelÃ¶st, wenn ein Element angeklickt wird.
     - `<button @click="increment">...</button>`
   * - `@mouseover`
     - Wird ausgelÃ¶st, wenn die Maus Ã¼ber ein Element fÃ¤hrt.
     - `<div @mouseover="onHover">...</div>`
   * - `@mouseout`
     - Wird ausgelÃ¶st, wenn die Maus ein Element verlÃ¤sst.
     - `<div @mouseout="onLeave">...</div>`
   * - `@keydown`
     - Wird ausgelÃ¶st, wenn eine Taste gedrÃ¼ckt wird.
     - `<input @keydown="onKeyDown">`
   * - `@keyup`
     - Wird ausgelÃ¶st, wenn eine Taste losgelassen wird.
     - `<input @keyup="onKeyUp">`
   * - `@input`
     - Wird ausgelÃ¶st, wenn der Wert eines Eingabefeldes geÃ¤ndert wird.
     - `<input @input="onInput">`
   * - `@submit`
     - Wird ausgelÃ¶st, wenn ein Formular abgeschickt wird.
     - `<form @submit.prevent="onSubmit">`
   * - `@focus`
     - Wird ausgelÃ¶st, wenn ein Element den Fokus erhÃ¤lt.
     - `<input @focus="onFocus">`
   * - `@blur`
     - Wird ausgelÃ¶st, wenn ein Element den Fokus verliert.
     - `<input @blur="onBlur">`

ErklÃ¤rung der Events
--------------------

- In Vue werden Events Ã¼ber die `@`-Syntax an HTML-Elemente gebunden, um auf Benutzerinteraktionen zu reagieren.
- Die obige Tabelle zeigt einige der am hÃ¤ufigsten verwendeten Events sowie deren Verwendung in der Praxis.
- Jedes Event kann eine eigene Methode aufrufen, die eine benutzerdefinierte Aktion ausfÃ¼hrt.
